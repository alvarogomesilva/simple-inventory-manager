generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
  StockMovement StockMovement[]

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  products Product[]

  @@map("categories")
}

model Supplier {
  id      String  @id @default(uuid())
  name    String
  email   String? @unique
  phone   String?
  address String?

  products Product[]

  @@map("suppliers")
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String?
  price       Decimal @db.Decimal(10, 2)
  quantity    Int     @default(0)
  categoryId  String
  supplierId  String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  category Category  @relation(fields: [categoryId], references: [id])
  supplier Supplier? @relation(fields: [supplierId], references: [id])

  stockMovements StockMovement[]

  @@map("products")
}

model StockMovement {
  id        String            @id @default(uuid())
  productId String
  quantity  Int
  type      StockMovementType // Entrada ou Saída
  userId    String?

  product Product @relation(fields: [productId], references: [id])
  user    User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())

  @@map("stock_movements")
}

enum StockMovementType {
  IN // Entrada no estoque
  OUT // Saída do estoque
}
